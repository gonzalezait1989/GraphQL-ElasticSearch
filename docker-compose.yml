version: '3.8'
services:
  product:
    build:
      context: .
    ports:
      - 8000:8000
      - 8080:8080
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./:/app
    command: ./mvnw spring-boot:run -Pdocker -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000"
    depends_on: 
      - elasticsearch
    networks:
      - backend  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-7.3.0}
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "path.data=/usr/share/elasticsearch/data/${STACK_VERSION:-7.3.0}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - backend

volumes:
  esdata:
    driver: local

networks:
  backend:
    driver: bridge